
--9) Вывести список врачей без стажа работы или со стажем в 1 год, 
--	 каждому врачу подобрать список врачей, 
--   которые могут выступать в качестве ментора. 
--   Врач-ментор должен быть той же специальности и иметь стаж работы как минимум на 10 лет больше. 
--   Результат вывести в виде: 
--		ФИО врача, 
--		специальность, 
--		стаж работы, 
--		список возможных менторов в виде: 
--			«ФИО_ментора1 – стаж_работы_ментора1, 
--			 ФИО_ментора2 – стаж_работы_ментора2, …». 
--	 Упорядочить по ФИО врача, затем по стажу работы врача.
--10) Вывести занятость врача «Иванов Иван Иванович» на текущую неделю в виде: 
--		день недели, 
--		номер кабинета, 
--		время приема, 
--		ФИО пациента. 
--    Не учитывать дни, в которые у врача нет приемов. 
--	  Упорядочить по дню недели и по времени приема.

BEGIN -- Создание базы данных
	IF DB_ID(N'practica7') IS NULL
		CREATE DATABASE [practica7]
	ELSE
		PRINT N'База данных practica7 уже существует'
END
GO
--Задание. Построить SQL-запрос для выборки сведений из БД, содержащей таблицы:
begin -- Создание таблиц
	USE [practica7]
	--•	Пациент (id_пациента, ФИО, категория, дата рождения);
	IF OBJECT_ID(N'patient', N'U') IS NULL
        CREATE TABLE [patient](
            [id] INT NOT NULL IDENTITY PRIMARY KEY,
			[last_name] NVARCHAR(50),
            [first_name] NVARCHAR(50),
            [middle_name] NVARCHAR(50),
			[category] nvarchar(100),
			[b_date] date
        )
    ELSE
        PRINT N'Таблица patient уже существует'
	drop table [patient]
	--•	Врач (id_врача, ФИО, специальность, стаж, дата рождения);
	IF OBJECT_ID(N'doctor', N'U') IS NULL
        CREATE TABLE [doctor](
            [id] INT NOT NULL IDENTITY PRIMARY KEY,
			[last_name] NVARCHAR(50),
            [first_name] NVARCHAR(50),
            [middle_name] NVARCHAR(50),
			[speciality] nvarchar(100),
			[work_experience] int,
			[b_date] date
        )
    ELSE
        PRINT N'Таблица doctor уже существует'
	drop table [doctor]
	--•	Прием (id_приема, id_пациента, id_врача, дата/время, кабинет).
	IF OBJECT_ID(N'doc_appointment', N'U') IS NULL
        CREATE TABLE [doc_appointment](
            [id] INT NOT NULL IDENTITY PRIMARY KEY,
			[patientId] int
				foreign key references[patient]([id]),
            [doctorId] int 
				foreign key references[doctor]([id]),
			[appointment_date] datetime2(0),
			[cabinet] smallint
        )
    ELSE
        PRINT N'Таблица doc_appointment уже существует'
	drop table [doc_appointment]
end
go

begin -- Заполнение таблиц данными
	-- Пациент
	INSERT INTO [patient] ([last_name], [first_name], [middle_name], [category], [b_date])
	values
		--10 пенсионеров
		('Коваленко', 'Ольга',      'Владимировна',  'пенсионер',  '1940-07-22'),
		('Тихомиров', 'Константин', 'Сергеевич',     'пенсионер',  '1942-04-20'),
		('Сидоров',   'Сидор',      'Сидорович',     'пенсионер',  '1945-03-30'),
		('Зайцев',    'Евгений',    'Юрьевич',       'пенсионер',  '1947-06-22'),
		('Орлов',     'Елена',      'Викторовна',    'пенсионер',  '1948-11-11'),
		('Иванов',    'Иван',       'Иванович',      'пенсионер',  '1950-01-15'),
		('Лебедев',   'Анастасия',  'Петровна',      'пенсионер',  '1952-09-05'),
		('Савельев',  'Никита',     'Валерьевич',    'пенсионер',  '1953-02-28'),
		('Смирнов',   'Алексей',    'Алексеевич',    'пенсионер',  '1955-05-25'),
		('Крылов',    'Артем',      'Денисович',     'пенсионер',  '1958-08-30'),
		--11 работающих
		('Федоров',   'Дмитрий',    'Анатольевич',   'работающий', '1975-08-18'),
		('Гусев',     'Светлана',   'Александровна', 'работающий', '1978-03-15'),
		('Петров',    'Петр',       'Петрович',      'работающий', '1980-02-20'),
		('Беляев',    'Виктор',     'Григорьевич',   'работающий', '1981-05-10'),
		('Григорьев', 'Игорь',      'Дмитриевич',    'работающий', '1983-10-30'),
		('Попов',     'Сергей',     'Иванович',      'работающий', '1985-06-12'),
		('Рябов',     'Станислав',  'Петрович',      'работающий', '1986-09-18'),
		('Морозов',   'Максим',     'Станиславович', 'работающий', '1988-12-01'),
		('Кузнецова', 'Анна',       'Сергеевна',     'работающий', '1990-04-10'),
		('Лисицын',   'Арсений',    'Андреевич',     'работающий', '1992-01-14'),
		('Костина',   'Мария',      'Игоревна',      'работающий', '1995-07-07'),
		--4 сторонних
		('Сидорова',  'Мария',      'Александровна', 'сторонний',  '2000-02-03'),
		('Николаев',  'Андрей',     'Викторович',    'сторонний',  '2001-03-04'),
		('Михайлова', 'Екатерина',  'Сергеевна',     'сторонний',  '2002-04-05'),
		('Фролов',    'Денис',      'Олегович',      'сторонний',  '2003-05-06'),
		--5 работающих-препенсионного
		('Павлов',    'Александр',	'Викторович',	 'работающий', '1965-02-15'),
		('Сергеев',   'Мария',		'Александровна', 'работающий', '1966-04-10'),
		('Федосова',  'Ольга',		'Ивановна',		 'работающий', '1967-06-20'),
		('Лукьянов',  'Дмитрий',	'Сергеевич',	 'работающий', '1968-08-30'),
		('Ковалев',   'Елена',		'Михайловна',	 'работающий', '1969-11-05');
		delete from [patient]
	-- Врач
	INSERT INTO [doctor] ([last_name], [first_name], [middle_name], [speciality], [work_experience], [b_date]) 
	VALUES
		('Попов',     'Сергей',    'Иванович',     'терапевт',      0,         '1982-06-06'),
		('Кузнецова', 'Анна',      'Сергеевна',    'терапевт',      0,         '1985-04-04'),
		('Федоров',   'Дмитрий',   'Анатольевич',  'терапевт',      5,         '1983-08-08'),
		('Иванов',    'Иван',      'Иванович',     'терапевт',      10,        '1970-01-01'),		
		('Петров',    'Петр',      'Петрович',     'терапевт',      15,        '1980-02-02'),
		('Григорьев', 'Игорь',     'Дмитриевич',   'терапевт',      20,        '1976-10-10'),

		('Коваленко', 'Ольга',     'Владимировна', 'окулист',       0,         '1978-07-07'),
		('Сидоров',   'Сидор',     'Сидорович',    'хирург',        11,        '1975-03-03'),
		
		('Смирнов',   'Алексей',   'Алексеевич',   'невролог',      8,         '1990-05-05'),

		('Лебедев',   'Анастасия', 'Петровна',     'отоларинголог', 3,         '1989-09-09');
		delete from [doctor]
	-- Прием в врача
	INSERT INTO [doc_appointment] ([patientId], [doctorId], [appointment_date], [cabinet]) 
	VALUES
		(1,  1,  '2024-01-05 10:00:00', 101),
		(1,  2,  '2024-02-06 10:30:00', 102),
		(2,  1,  '2024-03-07 11:00:00', 101),
		(3,  1,  '2024-03-05 10:00:00', 101),
		(4,  2,  '2024-04-06 10:30:00', 102),
		(5,  7,  '2024-04-07 11:00:00', 104),
		(4,  1,  '2024-05-05 10:00:00', 101),
		(5,  2,  '2024-05-06 10:30:00', 102),
		(6,  1,  '2024-05-07 11:00:00', 101),
		(7,  1,  '2024-06-05 10:00:00', 101),
		(8,  2,  '2024-06-06 10:30:00', 102),
		(9,  7,  '2024-07-06 11:00:00', 104),
		(1,  1,  '2024-07-06 10:00:00', 101),
		(1,  2,  '2024-07-06 10:30:00', 102),
		(2,  1,  '2024-07-07 11:00:00', 101),
		(1,  1,  '2024-07-07 10:00:00', 101),
		(1,  2,  '2024-07-07 10:30:00', 102),
		(1,  2,  '2024-07-07 10:30:00', 102),
		(3,  1,  '2024-08-05 10:00:00', 101),
		(4,  2,  '2024-09-03 10:30:00', 102),
		(5,  7,  '2024-09-03 11:00:00', 104),
		(4,  1,  '2024-09-05 10:00:00', 101),
		(5,  2,  '2024-10-01 10:30:00', 102),
		(6,  1,  '2024-10-01 11:00:00', 101),
		(7,  1,  '2024-11-05 10:00:00', 101),
		(8,  2,  '2024-12-09 10:30:00', 102),
		(9,  7,  '2024-12-09 11:00:00', 104),

		(3,  3,  '2025-04-08 09:00:00', 103),
		(4,  4,  '2025-04-09 10:00:00', 104),
		(5,  1,  '2025-04-10 11:30:00', 101),
		(6,  2,  '2025-04-11 09:30:00', 102),
		(7,  1,  '2025-04-12 10:30:00', 101),
		(8,  3,  '2025-04-13 11:00:00', 103),
		(9,  7,  '2025-04-14 09:00:00', 104),
		(10, 5,  '2025-04-15 10:00:00', 101),
		(11, 2,  '2025-04-16 11:30:00', 102),
		(12, 3,  '2025-04-17 09:30:00', 103),
		(13, 4,  '2025-04-18 10:00:00', 104),
		(14, 1,  '2025-04-19 11:00:00', 101),
		(15, 2,  '2025-04-20 09:00:00', 102),
		(16, 3,  '2025-04-21 10:30:00', 103),
		(17, 8,  '2025-04-22 11:00:00', 104),
		(18, 1,  '2025-04-23 09:00:00', 101),
		(19, 2,  '2025-04-24 10:00:00', 102),
		(20, 3,  '2025-04-25 11:30:00', 103),
		(21, 4,  '2025-04-26 10:00:00', 104),
		(22, 6,  '2025-04-27 11:00:00', 101),
		(23, 9,  '2025-04-28 09:30:00', 102),
		(24, 3,  '2025-04-29 10:00:00', 103),
		(25, 4,  '2025-04-30 11:30:00', 104),
		(26, 1,  '2025-04-30 11:30:00', 101),
		(26, 7,  '2025-04-30 12:00:00', 104),
		(27, 2,  '2025-04-30 11:30:00', 101),
		(27, 7,  '2025-04-30 11:30:00', 104),
		(28, 1,  '2025-04-30 11:30:00', 101),
		(28, 1,  '2025-05-30 11:30:00', 104),
		(28, 1,  '2025-06-30 11:30:00', 101),
		(29, 1,  '2025-04-30 11:30:00', 104),
		(29, 1,  '2025-05-30 11:30:00', 104),
		(29, 1,  '2025-06-30 11:30:00', 104),
		(16, 1,  '2025-04-05 10:00:00', 101),
		(17, 10, '2025-04-06 10:30:00', 102),
		(18, 3,  '2025-04-07 11:00:00', 103),
		(19, 9,  '2025-04-08 09:00:00', 104),
		(9,  7,  '2025-04-09 09:30:00', 104),
		(20, 7,  '2025-04-10 10:00:00', 101),
		(11, 4,  '2025-04-10 11:00:00', 104);
		delete from [doc_appointment]
end
go
--Запросы:
	--1) Извлечь пациентов, посетивших врача в текущем году, и врачей, принявших пациентов тоже в текущем году. 
	--   Результат вывести в виде: 
	--		id (Пациента/ Врача), 
	--		ФИО (Пациента/Врача); 
	--		приемов (число приемов у пациента/врача); 
	--		тип («Пациент»/ «Врач»). 
	--   Упорядочить по типам, затем по ФИО.
begin
	SELECT 
		pat.[id] AS [Код Врача/Пациента],
		pat.[last_name] + ' ' + pat.[first_name] + ' ' + pat.[middle_name] AS [ФИО Врача/Пациента],
		COUNT(doc_app.[id]) AS [Количество приемов],
		'Пациент' AS [Тип]
	FROM [patient] as pat
	JOIN [doc_appointment] as doc_app 
		ON pat.[id] = doc_app.[patientId]
	WHERE 
		YEAR(doc_app.[appointment_date]) = YEAR(GETDATE())
	GROUP BY 
		pat.[id], 
		pat.[last_name], 
		pat.[first_name], 
		pat.[middle_name]
UNION
	SELECT 
		doc.[id] AS [Код Врача/Пациента],
		doc.[last_name] + ' ' + doc.[first_name] + ' ' + doc.[middle_name] AS [ФИО Врача/Пациента],
		COUNT(doc_app.id) AS [Количество приемов],
		'Врач' AS [Тип]
	FROM [doctor] as doc
	JOIN [doc_appointment] as doc_app 
		ON doc.[id] = doc_app.[doctorId]
	WHERE 
		YEAR(doc_app.[appointment_date]) = YEAR(GETDATE())
	GROUP BY 
		doc.[id], 
		doc.[last_name], 
		doc.[first_name], 
		doc.[middle_name]
ORDER BY 
    [Тип], [ФИО Врача/Пациента];

end
go
	--2) Извлечь сведения о врачах-терапевтах с загруженностью в январе прошлого года больше 0,75. 
	--   Вывести: id, ФИО, количество принятых пациентов. 
	--   Загруженность = количество принятых пациентов/200. 
	--   Не учитывать пациентов категории «сторонний». Упорядочить по ФИО врачей.
begin
	select
		doc.[id] as [Код врача],
		doc.[last_name] + ' ' + 
		doc.[first_name] + ' ' + 
		doc.[middle_name] AS [ФИО],
		count(doc_app.[id]) as [Количество принятых пациентов]
	FROM [doctor] as doc
	JOIN [doc_appointment] as doc_app 
		ON doc.[id] = doc_app.[doctorId]
	where
		doc.[speciality] = 'терапевт'
	group by
		doc.[id],
		doc.[last_name],
		doc.[first_name],
		doc.[middle_name]
	having
		count(doc_app.[id]) / 200 > 0.75
	order by
		[ФИО]
end
go
	--3) Извлечь статистику посещений: 
	--		категория пациентов, 
	--		количество приемов пациентов этой категории, 
	--		количество врачей принявших пациентов этой категории. 
	--   Не учитывать пациентов, родившихся до 1 января 1976 года и врачей со стажем менее 1 года. 
	--   Упорядочить по категориям.
begin
	select
		pat.[category] as [Категория пациента],
		count(doc_app.[id]) as [Количество приемов пациентов этой категории],
		count(distinct doc.[id]) as [Количество врачей принявших пациентов этой категории]
	from [patient] as pat
	join [doc_appointment] as doc_app
		on pat.[id] = doc_app.[patientId]
	join [doctor] as doc
		on doc.[id] = doc_app.[doctorId]
	where
		pat.[b_date] > '1976-01-01' and 
		doc.[work_experience] >= 1
	group by
		pat.[category]
	order by
		pat.[category]
end
go
	--4) Извлечь сведения о врачах той же специальности, 
	--   что и врач с ФИО «Иванов Иван Иванович», 
	--   но принявших в текущем году больше пациентов. 
	--   Вывести id, ФИО, число принятых пациентов.
begin
	select
		doc.[id] as [Код доктора],
		doc.[last_name] + ' ' + 
		doc.[first_name] + ' ' + 
		doc.[middle_name] as [ФИО Врача],
		count(doc_app.[id]) as [Число принятых пациентов]
	from [doc_appointment] as doc_app
	join [doctor] as doc
		on doc.[id] = doc_app.[doctorId]
	where
		doc.[speciality] = 
		(
			select 
				doc.[speciality]
			from [doctor] as doc
			where 
				doc.[last_name] = 'Иванов' and
			    doc.[first_name] = 'Иван' and
			    doc.[middle_name] = 'Иванович'
		) and
		year(doc_app.[appointment_date]) = year(GETDATE())
	group by
		doc.[id],
		doc.[last_name],
		doc.[first_name],
		doc.[middle_name]
	having 
		count(doc_app.[id]) > 
	(
		select 
			count(doc_app.[id])
		from [doc_appointment] as doc_app
		join [doctor] as doc
			on doc.[id] = doc_app.[doctorId]
		where
			doc.[last_name] = 'Иванов' and
			doc.[first_name] = 'Иван' and
			doc.[middle_name] = 'Иванович' and
			year(doc_app.[appointment_date]) = year(getdate())
	)
	order by
		[ФИО Врача];
end
go
	--5) Извлечь id и ФИО пациентов, не посетивших в текущем году ни одного врача из тех, 
	--   которых посетил пациент «Иванов С.П.» 
	--   Отсортировать результат в обратном порядке по id.
begin
	select distinct
		pat.[id] as [Код пациента],
		pat.[last_name] + ' ' + 
		pat.[first_name] + ' ' + 
		pat.[middle_name] as [ФИО Пациента]
	from [patient] as pat
	join [doc_appointment] as [doc_app]
		on pat.[id] = doc_app.[patientId]
	where
		pat.[id] not in
		(
			select doc_app.[patientId]
			from [doc_appointment] as doc_app
			where 
				doc_app.[doctorId] in 
				(
					select
						doc_app.[doctorId]
					from [doc_appointment] as doc_app
					join [patient] as pat
						on doc_app.[patientId] = pat.[id]
					where
						pat.[last_name] = 'Иванов' and
						pat.[first_name] = 'Иван' and
						pat.[middle_name] = 'Иванович'
				) and
				year(doc_app.[appointment_date]) = year(getdate())
				)
			
	order by
		[Код пациента] desc
end
go
	--6) Извлечь id и ФИО пациентов категории «пенсионер», 
	--   которые в текущем году либо не посещали врача-терапевта, 
	--   либо посещали неоднократно врача-окулиста. 
	--   Результат упорядочить по ФИО пациента.
begin
	select distinct
		pat.[id] as [Код пациента],
		pat.[last_name] + ' ' + 
		pat.[first_name] + ' ' + 
		pat.[middle_name] as [ФИО Пациента]
	from [patient] as pat
	join [doc_appointment] as doc_app
		on doc_app.[patientId] = pat.[id]
	where
		pat.[category] = 'пенсионер' and
		doc_app.[doctorId] not in
		(
			select
				doc_app.[doctorId]
			from [doctor] as doc
			join [doc_appointment] as doc_app
				on doc_app.[doctorId] = doc.[id]
			where
				doc.[speciality] = 'терапевт' and
				year(doc_app.[appointment_date]) = year(getdate())
		) and
		year(doc_app.[appointment_date]) = year(getdate())

end
go
--7) Вывести всех пациентов предпенсионного возраста (55-60 лет включительно), 
--   которые в этом году посетили ровно 2х врачей, 
--   или 3 раза и больше посетили Иванова Ивана Ивановича. 
--   Результат вывести в виде: 
--		ФИО пациента, 
--		количество посещений, 
--		категория пациента (одна из 2х: 
--			посетил 2 врачей, 
--			посетил 3 раза или более врача «Иванов И. И.»). 
--   Результат упорядочить по категории пациента, а затем по количеству посещений по убыванию.
begin
	select
		pat.[last_name] + ' ' + 
		pat.[first_name] + ' ' + 
		pat.[middle_name] as [ФИО Пациента],
		count(doc_app.id) as [2 посещения/3 посещения Попова]
	from patient as pat
	join doc_appointment as doc_app
		on pat.id = doc_app.patientId
	where
		year(GETDATE()) - year(pat.b_date) >= 55 and
		year(GETDATE()) - year(pat.b_date) <= 60
	group by
		pat.[last_name],
		pat.[first_name],
		pat.[middle_name]
	having
		count(doc_app.[id]) = 2
union
	select
		pat.[last_name] + ' ' + 
		pat.[first_name] + ' ' + 
		pat.[middle_name] as [ФИО Пациента],
		count(doc_app.id) as [2 посещения/3 посещения Попова]
	from patient as pat
	join doc_appointment as doc_app
		on pat.id = doc_app.patientId
	join doctor as doc
		on doc.id = doc_app.doctorId
	where
		year(GETDATE()) - year(pat.b_date) >= 55 and
		year(GETDATE()) - year(pat.b_date) <= 60 and
		doc.id = (
			select
				doc.id
			from doctor as doc
			where
				doc.last_name = 'Попов' and
				doc.first_name = 'Сергей' and
				doc.middle_name = 'Иванович'
		)

	group by
		pat.[last_name],
		pat.[first_name],
		pat.[middle_name]
	having
		count(doc_app.[id]) >= 3
order by
	[2 посещения/3 посещения Попова] desc
end
go
--8) Для каждого месяца прошлого года вывести самый загруженный день по посещениям. 
--   Результат вывести виде: 
--		Название месяца, 
--		дата (в виде «Понедельник, 12 марта»), 
--		количество посещений.
BEGIN
    SELECT
        DATENAME(MONTH, doc_app.appointment_date) AS [Месяц],
        FORMAT(doc_app.appointment_date, 'dddd, dd MMMM', 'ru-RU') AS [Дата],
        COUNT(doc_app.id) AS [Кол-во посещений]
    FROM doc_appointment AS doc_app
    WHERE
        YEAR(doc_app.appointment_date) = YEAR(GETDATE()) - 1
    GROUP BY
        DATENAME(MONTH, doc_app.appointment_date),
        FORMAT(doc_app.appointment_date, 'dddd, dd MMMM', 'ru-RU'),
        MONTH(doc_app.appointment_date),
        DAY(doc_app.appointment_date)
    HAVING 
        COUNT(doc_app.id) = (
            SELECT MAX(VisitCount)
            FROM (
                SELECT 
                    COUNT(inner_doc.id) AS VisitCount,
                    MONTH(inner_doc.appointment_date) AS MonthNumber
                FROM 
                    doc_appointment AS inner_doc
                WHERE 
                    YEAR(inner_doc.appointment_date) = YEAR(GETDATE()) - 1
                GROUP BY 
                    DAY(inner_doc.appointment_date),
                    MONTH(inner_doc.appointment_date)
            ) AS SubQuery
            WHERE 
                SubQuery.MonthNumber = MONTH(doc_app.appointment_date)
        )
    ORDER BY 
        MONTH(doc_app.appointment_date),
        [Дата],
        [Кол-во посещений] DESC;
END
GO

